After a few hiccups, I found some variations from the provided walkthrough and what was necessary to complete the project. The particular issue was with the established conditions for the Bool.TryParse segment.


using System;

namespace TrueOrFalse
{
  class Program
  {
		static void Main(string[] args)
    {
      // Do not edit these lines
      Console.WriteLine("Welcome to 'True or False?'\nPress Enter to begin:");
      string entry = Console.ReadLine();
      Tools.SetUpInputStream(entry);

      // Type your code below
      string[] questions = {"Is the sky blue", "Is it an African Swallow", "Is a tomatoe a fruit"};
      bool[] answers = new bool[]{true, false, true};
      bool[] responses = new bool[questions.Length];
      if (questions.Length != answers.Length)
      {
        Console.WriteLine ("Warning the number of answers supplied does not match the number of questions.");
      }
      int askingIndex = 0;
      foreach (string question in questions)
      {
        string input;
        bool isBool; 
        bool inputBool;
        Console.WriteLine(question);
        Console.WriteLine("true or false?");
        input = Console.ReadLine();
        isBool = Boolean.TryParse(input, out inputBool);
        while (isBool == false)
        {
          Console.WriteLine("Please Respond with 'true' or 'false'.");
          input = Console.ReadLine();
          isBool = Boolean.TryParse(input, out inputBool);
        }
        responses[askingIndex] = inputBool;
          askingIndex ++;

      }
    int scoringIndex = 0;
    int score = 0;
    foreach (bool answer in answers)
    {
      bool response = responses[scoringIndex];
      Console.Write(scoringIndex + 1 + ".");
      Console.WriteLine($"Input: {response} | Answer: {answer}");
      if (response == answer)
      {
        score ++;
      } 
      scoringIndex ++;
    }
    Console.WriteLine($"Score: {score} out of {responses.Length} correct.");
    }
  }
}
